{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","ComicsList","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_jsxs","className","children","items","map","item","i","imgStyle","thumbnail","indexOf","Link","to","id","src","alt","title","style","price","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","name","content","AppBanner"],"mappings":"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","file":"static/js/7.efc08a95.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import './comicsList.scss';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        \n        case 'confirmed':\n            return <Component/>;\n        \n        case 'error':\n            return <ErrorMessage/>;\n\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    \n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        setNewItemLoading(!initial)\n\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = item.thumbnail.indexOf('image_not_available') ? {'objectFit': 'unset'} : {'objectFit': 'cover'};\n\n            return(\n                <li \n                    className=\"comics__item\"\n                    key={i}\n                >\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} style={imgStyle} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return(\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n        {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <meta name=\"description\" content=\"Page with list of our comics\" />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}