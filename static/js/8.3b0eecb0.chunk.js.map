{"version":3,"sources":["components/skeleton/Skeleton.js","utils/setContent.js","components/pages/SinglePage.js"],"names":["Skeleton","_jsxs","_Fragment","children","_jsx","className","setContent","process","Component","data","Spinner","ErrorMessage","Error","SinglePage","_ref","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","setData","_useMarvelService","useMarvelService","getComic","getCharachter","clearError","setProcess","useEffect","updateData","then","onDataLoaded","AppBanner"],"mappings":"mIAmBeA,EAjBE,WACb,OACIC,eAAAC,WAAA,CAAAC,SAAA,CACIC,cAAA,KAAGC,UAAU,eAAcF,SAAC,iDAC5BF,eAAA,OAAKI,UAAU,WAAUF,SAAA,CACrBF,eAAA,OAAKI,UAAU,yBAAwBF,SAAA,CACnCC,cAAA,OAAKC,UAAU,2BACfD,cAAA,OAAKC,UAAU,4BAEnBD,cAAA,OAAKC,UAAU,0BACfD,cAAA,OAAKC,UAAU,0BACfD,cAAA,OAAKC,UAAU,+BAI/B,ECQeC,IAnBI,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAOH,cAACJ,EAAQ,IAEpB,IAAK,UACD,OAAOI,cAACM,IAAO,IAEnB,IAAK,YACD,OAAON,cAACI,EAAS,CAACC,KAAMA,IAE5B,IAAK,QACD,OAAOL,cAACO,IAAY,IAExB,QACI,MAAM,IAAIC,MAAM,4BAE5B,C,sHC0BeC,UA1CI,SAAHC,GAA+B,IAA1BN,EAASM,EAATN,UAAWO,EAAQD,EAARC,SACrBC,EAAMC,cAAND,GACPE,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BT,EAAIW,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAmEC,cAA5DC,EAAQF,EAARE,SAAUC,EAAaH,EAAbG,cAAeC,EAAUJ,EAAVI,WAAYpB,EAAOgB,EAAPhB,QAASqB,EAAUL,EAAVK,WAErDC,qBAAU,WACNC,GAEJ,GAAG,CAACd,IAEJ,IAAMc,EAAa,WAGf,OAFAH,IAEQZ,GACJ,IAAK,QACDU,EAAST,GACJe,KAAKC,GACLD,MAAK,kBAAMH,EAAW,YAAY,IACvC,MAEJ,IAAK,YACDF,EAAcV,GACTe,KAAKC,GACLD,MAAK,kBAAMH,EAAW,YAAY,IACvC,MACJ,QACI,MAAM,IAAIhB,MAAM,wBAE5B,EAEMoB,EAAe,SAACvB,GAClBa,EAAQb,EACZ,EAEA,OACIR,eAAAC,WAAA,CAAAC,SAAA,CACIC,cAAC6B,IAAS,IACT3B,YAAWC,EAASC,EAAWC,KAG5C,C","file":"static/js/8.3b0eecb0.chunk.js","sourcesContent":["import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","\r\nimport Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton />;\r\n\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        \r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        \r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {getComic, getCharachter, clearError, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n        // eslint-disable-next-line\r\n    }, [id])\r\n\r\n    const updateData = () => {\r\n        clearError()\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                getComic(id)\r\n                    .then(onDataLoaded)\r\n                    .then(() => setProcess('confirmed'));\r\n                break;\r\n\r\n            case 'character':\r\n                getCharachter(id)\r\n                    .then(onDataLoaded)\r\n                    .then(() => setProcess('confirmed'));\r\n                break;\r\n            default:\r\n                throw new Error('Unexpected data type');\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <AppBanner/>\r\n            {setContent(process, Component, data)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage;"],"sourceRoot":""}